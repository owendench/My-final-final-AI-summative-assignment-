# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from google.colab import files

# Step 1: Upload the file
print("Please upload your dataset:")
uploaded = files.upload()

# Load the dataset
file_name = list(uploaded.keys())[0]
data = pd.read_csv(file_name)

# Display the first few rows to verify data loading
print("\nFirst 5 Rows of the Dataset:")
print(data.head())

# Display column names to verify correct usage
print("\nColumn Names in the Dataset:")
print(data.columns)

# Basic Data Information
print("\nBasic Dataset Information:")
print(data.info())

# =============================
# Data Cleaning
# =============================

# Columns to handle negative values
numeric_columns = ['Training_Hours', 'Annual_Sales', 'Productivity']

# Convert to numeric and handle non-numeric data
for col in numeric_columns:
    data[col] = pd.to_numeric(data[col], errors='coerce')
    data[col] = data[col].apply(lambda x: np.nan if x < 0 else x)

# Remove top 2% of extreme values to reduce outliers
for col in numeric_columns:
    threshold = data[col].quantile(0.98)
    data = data[data[col] <= threshold]

# Drop remaining missing values for simplicity
data.dropna(inplace=True)

# =============================
# Grouping Training Hours into 8 Categories
# =============================
# Define 8 training categories
bins = [0, 10, 20, 30, 40, 50, 60, 80, np.inf]
labels = ['Very Low', 'Low', 'Below Average', 'Average', 'Above Average', 'High', 'Very High', 'Extremely High']
data['Training_Category'] = pd.cut(data['Training_Hours'], bins=bins, labels=labels)

# =============================
# Comparative Non-Visual Descriptive Statistics
# =============================

print("\nComparative Non-Visual Descriptive Statistics:")

# 1. Turnover Analysis by Department and Leadership Style
print("\n1. Employee Turnover by Department and Leadership Style")
turnover_dept_leadership = data.groupby(['Department', 'Leadership_Style'])['Employee_Turnover'].agg(['mean', 'std', 'min', 'max', 'count'])
print(turnover_dept_leadership)

# 2. High Productivity Analysis by Region
high_productivity_threshold = data['Productivity'].quantile(0.95)
high_productivity_region = data[data['Productivity'] >= high_productivity_threshold].groupby('Region')['Productivity'].count()

print("\n2. High Productivity by Region (Top 5% of Productivity)")
print(high_productivity_region)

# 3. Training Effectiveness Analysis (Training Hours vs Productivity)
print("\n3. Training Effectiveness Analysis (Training Hours vs Productivity)")
training_effectiveness = data.groupby('Training_Category')['Productivity'].agg(['mean', 'std', 'min', 'max'])
print(training_effectiveness)

# =============================
# Visual Analysis
# =============================

# 1. Bar Chart - Employee Turnover by Department and Leadership Style
plt.figure(figsize=(14, 8))
turnover_plot = turnover_dept_leadership.reset_index()
sns.barplot(x='Department', y='mean', hue='Leadership_Style', data=turnover_plot, palette='Set1')
plt.title('Average Employee Turnover by Department and Leadership Style')
plt.ylabel('Average Turnover')
plt.grid(alpha=0.3)
plt.xticks(rotation=45)
plt.show()

# 2. Pie Chart - High Productivity by Region
plt.figure(figsize=(10, 10))
plt.pie(high_productivity_region, labels=high_productivity_region.index, autopct='%1.1f%%', colors=sns.color_palette('Set3'))
plt.title('Distribution of High Productivity (Top 5%) by Region')
plt.show()

# 3. Bar Chart - Training Hours vs Productivity (8 Categories)
plt.figure(figsize=(14, 8))
training_effectiveness_plot = training_effectiveness.reset_index()
sns.barplot(x='Training_Category', y='mean', data=training_effectiveness_plot, palette='Set2')
plt.title('Average Productivity by Training Hours Category')
plt.ylabel('Average Productivity')
plt.xlabel('Training Hours Category')
plt.grid(alpha=0.3)
plt.xticks(rotation=45)
plt.show()

# Save the cleaned dataset
data.to_csv('Cleaned_Business_Management_Dataset_New_Analysis.csv', index=False)
print("\nData cleaning and visualization completed. Dataset saved as 'Cleaned_Business_Management_Dataset_New_Analysis.csv'")

Business_Management_Dataset 3.csv(text/csv) - 1547443 bytes, last modified: n/a - 100% done
 Saving Business_Management_Dataset 3.csv to Business_Management_Dataset 3.csv

First 5 Rows of the Dataset:
   Employee_Satisfaction  Employee_Turnover  Training_Hours  Productivity  \
0                   8.53               1.66           59.72         53.75   
1                   8.38              12.70           37.63         78.74   
2                   2.03              27.22           45.53         96.58   
3                   2.32              11.89           35.75        102.44   
4                   6.41              23.06           11.12         47.51   

   Annual_Sales  Market_Share  Department  Region Company_Type  \
0     574996.25         36.32     Finance    Asia  Corporation   
1     190461.36         27.66     Finance  Europe  Corporation   
2     497310.10         37.07          HR    Asia  Corporation   
3     536186.74         20.56          HR  Africa          SME   
4     432654.80          9.18  Operations  Africa          SME   

   Leadership_Style  
0  Transformational  
1     Transactional  
2     Laissez-faire  
3     Laissez-faire  
4        Autocratic  

Column Names in the Dataset:
Index(['Employee_Satisfaction', 'Employee_Turnover', 'Training_Hours',
       'Productivity', 'Annual_Sales', 'Market_Share', 'Department', 'Region',
       'Company_Type', 'Leadership_Style'],
      dtype='object')

Basic Dataset Information:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 20000 entries, 0 to 19999
Data columns (total 10 columns):
 #   Column                 Non-Null Count  Dtype  
---  ------                 --------------  -----  
 0   Employee_Satisfaction  20000 non-null  float64
 1   Employee_Turnover      20000 non-null  float64
 2   Training_Hours         20000 non-null  float64
 3   Productivity           20000 non-null  float64
 4   Annual_Sales           20000 non-null  float64
 5   Market_Share           20000 non-null  float64
 6   Department             20000 non-null  object 
 7   Region                 20000 non-null  object 
 8   Company_Type           20000 non-null  object 
 9   Leadership_Style       20000 non-null  object 
dtypes: float64(6), object(4)
memory usage: 1.5+ MB
None

Comparative Non-Visual Descriptive Statistics:

1. Employee Turnover by Department and Leadership Style
                                  mean       std   min    max  count
Department Leadership_Style                                         
Finance    Autocratic        14.768289  8.674108  0.00  29.98    935
           Laissez-faire     14.371853  8.641166  0.01  29.79    912
           Transactional     15.260441  8.448541  0.00  29.94    907
           Transformational  15.389017  8.586048  0.04  29.99    946
HR         Autocratic        14.709269  8.591443  0.02  29.98    944
           Laissez-faire     14.741329  8.865607  0.04  29.99    933
           Transactional     14.979036  8.624704  0.02  29.95    913
           Transformational  15.061194  8.566781  0.01  29.95    921
Marketing  Autocratic        14.721400  8.687359  0.03  29.94    950
           Laissez-faire     15.438384  8.699991  0.10  29.96    928
           Transactional     14.761593  8.555863  0.05  29.91    948
           Transformational  14.944985  8.762694  0.08  29.90    985
Operations Autocratic        14.878077  8.812921  0.02  29.99    936
           Laissez-faire     15.480011  8.706395  0.00  29.98    940
           Transactional     14.811018  8.938838  0.02  29.98    943
           Transformational  15.400538  8.603603  0.03  29.87    930
Sales      Autocratic        14.933149  8.592916  0.00  29.96    921
           Laissez-faire     15.050412  8.815664  0.01  30.00    923
           Transactional     15.312475  8.574327  0.11  29.96    901
           Transformational  14.482381  8.832605  0.04  29.95    924

2. High Productivity by Region (Top 5% of Productivity)
Region
Africa           158
Asia             198
Europe           207
North America    191
South America    178
Name: Productivity, dtype: int64

3. Training Effectiveness Analysis (Training Hours vs Productivity)
                        mean        std    min     max
Training_Category                                     
Very Low           77.472090  19.421359  23.95  120.94
Low                78.940519  18.696454  19.06  121.15
Below Average      79.487156  19.204352  15.22  120.85
Average            79.255625  18.787583   8.70  121.20
Above Average      79.147366  19.129856   2.68  121.17
High               78.367606  18.893921   6.66  121.05
Very High          78.419767  18.715833   5.83  121.01
Extremely High           NaN        NaN    NaN     NaN
<ipython-input-1-e793a961b6bb>:76: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  training_effectiveness = data.groupby('Training_Category')['Productivity'].agg(['mean', 'std', 'min', 'max'])




